Output-file format
==================

The output files generated by each program are summarized in the table below:

.. csv-table::
    :header: Program, Output, Reference
    :widths: 5, 20, 10

    ``dcore_pre``, "*seedname*.h5"
    ``dcore``, *seedname*.out.h5
    , work/imp_shell#\_iter#/*solver_dependent_output*
    ``dcore_check``, check/iter\_mu.dat
    , check/iter\_mu.png, :doc:`programs`
    , check/iter\_sigma.dat
    , check/iter\_sigma-ish0.png, :doc:`programs`
    , check/sigma.dat
    , check/sigma\_ave.png, :doc:`programs`
    ``dcore_post``, post/*seedname*\_dos.dat
    , post/*seedname*\_akw.dat
    , post/*seedname*\_akw.gp, :doc:`programs`
    , post/*seedname*\_momdist.dat

Files that have empty Reference in this table are explained in the following.

``dcore_pre``
~~~~~~~~~~~~~

-   *seedname*.h5

    It has two groups, ``dft_input`` and ``Dcore``.
    See `DFTTools <https://triqs.ipht.cnrs.fr/applications/dft_tools/reference/h5structure.html>`_ for the details of the data structure in ``dft_input`` group.
    The data included in ``Dcore`` group is list below:

    .. include:: dcore_pre.txt

``dcore``
~~~~~~~~~

-   *seedname*.out.h5

    All data are stored in ``dmft_out`` group.
    The following list summarizes data structure in the ``dmft_out`` group:

    .. include:: dcore_out.txt

    See
    `TRIQS manual <https://triqs.ipht.cnrs.fr/1.x/reference/gfs/py/full.html#hdf5>`_
    for the data structure of the Green's function and self-energy.

-   solver_dependent_output

    All solver-dependent output are stored in the working directory such as **work/imp_shell#_iter#** (#'s are replaced with numbers).
    See :doc:`../impuritysolvers` for details.

``dcore_check``
~~~~~~~~~~~~~~~

-   **check/iter_mu.dat**

    The chemical potential as a function of the iteration number.
    This is the data corresponding to the figure iter_mu.png (see :ref:`program_dcore_check`).

    .. tutorial for 2D Hubbard model

    ::

        1 0.0000000000e+00
        2 1.4197880094e-01
        3 4.6478279315e-01
        4 6.3732253182e-01
        5 6.4637277925e-01
        6 6.8031573871e-01
        7 7.0882955968e-01

-   **check/iter_sigma.dat**

    The average self-energy as a function of the iteration number.
    This is the data corresponding to the figure iter_sigma.png (see :ref:`program_dcore_check`).

    ::

        1 0.6674359500130874 0.6674359500130874
        2 0.5208316972639336 0.5208316972639336
        3 0.31558993009526837 0.31558993009526837
        4 0.17496815990309889 0.17496815990309889
        5 0.13950821208253136 0.13950821208253136
        6 0.11496910148099888 0.11496910148099888
        7 0.09665012984893595 0.09665012984893595

-   **check/sigma.dat**

    The local self energy at the final step.

    ::

       # Local self energy at imaginary frequency
       # [Column] Data
       # [1] Frequency
       # [2] Re(Sigma_{shell=0, spin=up, 0, 0})
       # [3] Im(Sigma_{shell=0, spin=up, 0, 0})
       # [4] Re(Sigma_{shell=0, spin=down, 0, 0})
       # [5] Im(Sigma_{shell=0, spin=down, 0, 0})
       -157.001093 0.994751 0.006358 0.994751 0.006358
       -156.844013 0.994751 0.006365 0.994751 0.006365
       -156.686934 0.994751 0.006371 0.994751 0.006371
       :

``dcore_post``
~~~~~~~~~~~~~~

-   **post/**\ *seedname*\ **_dos.dat**

    The density of states.

    ::

        # [1] Energy
        # [2] Total DOS of spin up
        # [3] Total DOS of spin down
        # [4] PDOS of shell0,spin up,band0
        # [5] PDOS of shell0,spin down,band0
        -5.000000 0.010048 0.010048 0.010048 0.010048
        -4.972431 0.010299 0.010299 0.010299 0.010299
        -4.944862 0.010562 0.010562 0.010562 0.010562
        -4.917293 0.010837 0.010837 0.010837 0.010837
        -4.889724 0.011126 0.011126 0.011126 0.011126
        :

-   **post/**\ *seedname*\ **_akw.dat**

    The single-particle excitation spectrum A(k, w).
    See :ref:`program_dcore_post` for how to plot this data.

    ::

        0.000000 -5.000000 0.092677
        0.000000 -4.972431 0.097063
        0.000000 -4.944862 0.101755
        0.000000 -4.917293 0.106779
        0.000000 -4.889724 0.112165
        0.000000 -4.862155 0.117947
        0.000000 -4.834586 0.124162
        0.000000 -4.807018 0.130850
        0.000000 -4.779449 0.138058
        0.000000 -4.751880 0.145834
        :

-   **post/**\ *seedname*\ **_momdist.dat**

    The momentum distribution function.

    ::

        # Momentum distribution
        # [Column] Data
        # [1] Distance along k-path
        # [2] Re(MomDist_{spin=up, 0, 0})
        # [3] Im(MomDist_{spin=up, 0, 0})
        # [4] Re(MomDist_{spin=down, 0, 0})
        # [5] Im(MomDist_{spin=down, 0, 0})
        0.000000 0.948389 -0.000000 0.948389 -0.000000
        0.005000 0.948368 -0.000000 0.948368 -0.000000
        0.010000 0.948303 -0.000000 0.948303 -0.000000
        :
