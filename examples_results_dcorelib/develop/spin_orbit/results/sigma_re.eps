%!PS-Adobe-2.0 EPSF-2.0
%%Title: sigma_re.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Thu Feb 24 21:23:37 2022
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sigma_re.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb 24 21:23:37 2022)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1176 1008 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1008 M
[ [(Times-Roman) 240.0 0.0 true true 0 (-1.5)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
/vshift -80 def
1.000 UL
LTb
LCb setrgbcolor
1176 1550 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1550 M
[ [(Times-Roman) 240.0 0.0 true true 0 (-1)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 2091 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2091 M
[ [(Times-Roman) 240.0 0.0 true true 0 (-0.5)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 2633 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2633 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 3174 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3174 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 3716 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3716 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 4257 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4257 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 1.5)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 4799 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4799 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 2)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1176 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
1176 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2108 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
2108 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3040 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
3040 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3972 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
3972 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 15)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4903 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
4903 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5835 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
5835 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 25)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6767 1008 M
0 63 V
0 3728 R
0 -63 V
stroke
6767 768 M
[ [(Times-Roman) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
/Times-Roman findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2.000 UL
LTa
LCb setrgbcolor
1176 2633 M
5591 0 V
stroke
LTa
LCb setrgbcolor
1176 1008 M
0 3791 V
stroke
1.000 UL
LTB
LCb setrgbcolor
1176 4799 N
0 -3791 V
5591 0 V
0 3791 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
228 2903 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 240.0 0.0 true true 0 (Re Sigma\(iw)]
[(Times-Roman) 192.0 -72.0 true true 0 (n)]
[(Times-Roman) 240.0 0.0 true true 0 (\))]
] -56.0 MCshow
grestore
/Times-Roman findfont 240 scalefont setfont
LTb
LCb setrgbcolor
3971 408 M
[ [(Times-Roman) 240.0 0.0 true true 0 (w)]
[(Times-Roman) 192.0 -72.0 true true 0 (n)]
] -56.0 MCshow
/Times-Roman findfont 240 scalefont setfont
LTb
% Begin plot #1
1.500 UP
3.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
5696 1911 M
[ [(Times-Roman) 240.0 0.0 true true 0 (up 0)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.500 UP
3.000 UL
LTb
0.58 0.00 0.83 C
5840 1911 M
639 0 V
1176 1358 M
59 0 V
117 1503 V
117 635 V
117 337 V
117 206 V
117 137 V
117 95 V
117 68 V
117 51 V
117 39 V
118 31 V
117 24 V
117 19 V
117 16 V
117 13 V
117 11 V
117 10 V
117 7 V
117 7 V
117 6 V
118 5 V
117 4 V
117 4 V
117 3 V
117 3 V
117 3 V
117 2 V
117 3 V
117 1 V
117 2 V
117 2 V
118 1 V
117 2 V
117 1 V
117 1 V
117 1 V
117 1 V
117 1 V
117 0 V
117 1 V
117 1 V
118 0 V
117 1 V
117 1 V
117 0 V
117 1 V
117 0 V
117 0 V
29 0 V
1235 1358 Crs
1352 2861 Crs
1469 3496 Crs
1586 3833 Crs
1703 4039 Crs
1820 4176 Crs
1937 4271 Crs
2054 4339 Crs
2171 4390 Crs
2288 4429 Crs
2406 4460 Crs
2523 4484 Crs
2640 4503 Crs
2757 4519 Crs
2874 4532 Crs
2991 4543 Crs
3108 4553 Crs
3225 4560 Crs
3342 4567 Crs
3459 4573 Crs
3577 4578 Crs
3694 4582 Crs
3811 4586 Crs
3928 4589 Crs
4045 4592 Crs
4162 4595 Crs
4279 4597 Crs
4396 4600 Crs
4513 4601 Crs
4630 4603 Crs
4747 4605 Crs
4865 4606 Crs
4982 4608 Crs
5099 4609 Crs
5216 4610 Crs
5333 4611 Crs
5450 4612 Crs
5567 4613 Crs
5684 4613 Crs
5801 4614 Crs
5918 4615 Crs
6036 4615 Crs
6153 4616 Crs
6270 4617 Crs
6387 4617 Crs
6504 4618 Crs
6621 4618 Crs
6738 4618 Crs
6159 1911 Crs
% End plot #1
% Begin plot #2
1.500 UP
3.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
5696 1671 M
[ [(Times-Roman) 240.0 0.0 true true 0 (up 1)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.500 UP
3.000 UL
LTb
0.00 0.62 0.45 C
5840 1671 M
639 0 V
1176 4102 M
59 0 V
117 219 V
117 99 V
117 56 V
117 38 V
117 25 V
117 19 V
117 13 V
117 11 V
117 7 V
118 6 V
117 5 V
117 4 V
117 3 V
117 3 V
117 2 V
117 2 V
117 1 V
117 2 V
117 1 V
118 1 V
117 1 V
117 0 V
117 1 V
117 1 V
117 0 V
117 0 V
117 1 V
117 0 V
117 1 V
117 0 V
118 0 V
117 0 V
117 1 V
117 0 V
117 0 V
117 0 V
117 0 V
117 1 V
117 0 V
117 0 V
118 0 V
117 0 V
117 0 V
117 0 V
117 0 V
117 0 V
117 1 V
29 0 V
1235 4102 Crs
1352 4321 Crs
1469 4420 Crs
1586 4476 Crs
1703 4514 Crs
1820 4539 Crs
1937 4558 Crs
2054 4571 Crs
2171 4582 Crs
2288 4589 Crs
2406 4595 Crs
2523 4600 Crs
2640 4604 Crs
2757 4607 Crs
2874 4610 Crs
2991 4612 Crs
3108 4614 Crs
3225 4615 Crs
3342 4617 Crs
3459 4618 Crs
3577 4619 Crs
3694 4620 Crs
3811 4620 Crs
3928 4621 Crs
4045 4622 Crs
4162 4622 Crs
4279 4622 Crs
4396 4623 Crs
4513 4623 Crs
4630 4624 Crs
4747 4624 Crs
4865 4624 Crs
4982 4624 Crs
5099 4625 Crs
5216 4625 Crs
5333 4625 Crs
5450 4625 Crs
5567 4625 Crs
5684 4626 Crs
5801 4626 Crs
5918 4626 Crs
6036 4626 Crs
6153 4626 Crs
6270 4626 Crs
6387 4626 Crs
6504 4626 Crs
6621 4626 Crs
6738 4627 Crs
6159 1671 Crs
% End plot #2
% Begin plot #3
1.500 UP
3.000 UL
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
5696 1431 M
[ [(Times-Roman) 240.0 0.0 true true 0 (down 0)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.500 UP
3.000 UL
LTb
0.34 0.71 0.91 C
5840 1431 M
639 0 V
1176 1358 M
59 0 V
117 1503 V
117 635 V
117 337 V
117 206 V
117 137 V
117 95 V
117 68 V
117 51 V
117 39 V
118 31 V
117 24 V
117 19 V
117 16 V
117 13 V
117 11 V
117 10 V
117 7 V
117 7 V
117 6 V
118 5 V
117 4 V
117 4 V
117 3 V
117 3 V
117 3 V
117 2 V
117 3 V
117 1 V
117 2 V
117 2 V
118 1 V
117 2 V
117 1 V
117 1 V
117 1 V
117 1 V
117 1 V
117 0 V
117 1 V
117 1 V
118 0 V
117 1 V
117 1 V
117 0 V
117 1 V
117 0 V
117 0 V
29 0 V
1235 1358 Box
1352 2861 Box
1469 3496 Box
1586 3833 Box
1703 4039 Box
1820 4176 Box
1937 4271 Box
2054 4339 Box
2171 4390 Box
2288 4429 Box
2406 4460 Box
2523 4484 Box
2640 4503 Box
2757 4519 Box
2874 4532 Box
2991 4543 Box
3108 4553 Box
3225 4560 Box
3342 4567 Box
3459 4573 Box
3577 4578 Box
3694 4582 Box
3811 4586 Box
3928 4589 Box
4045 4592 Box
4162 4595 Box
4279 4597 Box
4396 4600 Box
4513 4601 Box
4630 4603 Box
4747 4605 Box
4865 4606 Box
4982 4608 Box
5099 4609 Box
5216 4610 Box
5333 4611 Box
5450 4612 Box
5567 4613 Box
5684 4613 Box
5801 4614 Box
5918 4615 Box
6036 4615 Box
6153 4616 Box
6270 4617 Box
6387 4617 Box
6504 4618 Box
6621 4618 Box
6738 4618 Box
6159 1431 Box
% End plot #3
% Begin plot #4
1.500 UP
3.000 UL
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
5696 1191 M
[ [(Times-Roman) 240.0 0.0 true true 0 (down 1)]
] -80.0 MRshow
/Times-Roman findfont 240 scalefont setfont
1.500 UP
3.000 UL
LTb
0.90 0.62 0.00 C
5840 1191 M
639 0 V
1176 4102 M
59 0 V
117 219 V
117 99 V
117 56 V
117 38 V
117 25 V
117 19 V
117 13 V
117 11 V
117 7 V
118 6 V
117 5 V
117 4 V
117 3 V
117 3 V
117 2 V
117 2 V
117 1 V
117 2 V
117 1 V
118 1 V
117 1 V
117 0 V
117 1 V
117 1 V
117 0 V
117 0 V
117 1 V
117 0 V
117 1 V
117 0 V
118 0 V
117 0 V
117 1 V
117 0 V
117 0 V
117 0 V
117 0 V
117 1 V
117 0 V
117 0 V
118 0 V
117 0 V
117 0 V
117 0 V
117 0 V
117 0 V
117 1 V
29 0 V
1235 4102 Box
1352 4321 Box
1469 4420 Box
1586 4476 Box
1703 4514 Box
1820 4539 Box
1937 4558 Box
2054 4571 Box
2171 4582 Box
2288 4589 Box
2406 4595 Box
2523 4600 Box
2640 4604 Box
2757 4607 Box
2874 4610 Box
2991 4612 Box
3108 4614 Box
3225 4615 Box
3342 4617 Box
3459 4618 Box
3577 4619 Box
3694 4620 Box
3811 4620 Box
3928 4621 Box
4045 4622 Box
4162 4622 Box
4279 4622 Box
4396 4623 Box
4513 4623 Box
4630 4624 Box
4747 4624 Box
4865 4624 Box
4982 4624 Box
5099 4625 Box
5216 4625 Box
5333 4625 Box
5450 4625 Box
5567 4625 Box
5684 4626 Box
5801 4626 Box
5918 4626 Box
6036 4626 Box
6153 4626 Box
6270 4626 Box
6387 4626 Box
6504 4626 Box
6621 4626 Box
6738 4627 Box
6159 1191 Box
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4799 N
0 -3791 V
5591 0 V
0 3791 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
